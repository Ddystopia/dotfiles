#!/usr/bin/env bash

# MIT License
#
# Copyright (c) 2020 veleth
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


###########################################
# global stuff needed everywhere          #
###########################################
INFO=()     # info array
r="\x1B[0m" # reset color
l="\x1B[1m" # bold text

###########################################
# getting needed information              #
###########################################
# getting OS name
if [ -f /etc/os-release ];
then
  OS=$(cat /etc/os-release | grep "PRETTY_NAME" | tr '"' " " | awk '{ $1=""; print tolower($0) }' | xargs)
elif type lsb_release &>/dev/null;
then
  OS=$(lsb_release -si | awk '{print tolower($0)}')
else
  OS=$(uname -o | awk '{ print tolower($0) }')
fi
# getting kernel version
KERNEL=$(uname -r)
# getting kernel architecture
ARCH=$(uname -m | awk '{print tolower($0)}')
# finding out if OS has uptime with prerrifying option
# or hardcoding prettified uptime
uptime -p >/dev/null 2>&1
[ $? -eq 0 ] && UPTIME=$(uptime -p | awk '{ $1=""; print }' | tr -d "," | xargs) \
             || UPTIME=$(
  awk '{
    uptime = $1;
    if (uptime >= 604800) {
      if (uptime >= 1209600) {
        printf "%s weeks ", int(uptime/604800);
      } else {
        printf "1 week ";
      }
    }
    if (uptime >= 86400) {
      if (int((uptime%604800)/86400) > 0) {
        if (int((uptime%604800)/86400) >= 2) {
          printf "%s days ", int((uptime%604800)/86400);
        } else {
          printf "1 day ";
        }
      }
    }
    if (uptime >= 3600) {
      if (int((uptime%86400)/3600) > 0) {
        if (int((uptime%86400)/3600) >= 2) {
          printf "%s hours ", int((uptime%86400)/3600);
        } else {
          printf "1 hour ";
        }
      }
    }
    if (uptime >= 60) {
      if (int((uptime%3600)/60) > 0) {
        if (int((uptime%3600)/60) >= 2) {
          printf "%s minutes ", int((uptime%3600)/60);
        } else {
          printf "1 minute ";
        }
      }
    }
    if (uptime >= 1 && 59 >= uptime) {
      if (int(uptime%60) > 0) {
        if (int(uptime%60) >= 2) {
          printf "%s seconds", int(uptime%60);
        } else {
          printf "1 second";
        }
      }
    }
  }' /proc/uptime | xargs) \
             || UPTIME=$(uptime | cut -f1 -d "," | sed -E 's/^[^,]*up *//; s/, *[[:digit:]]* users.*//; s/min/minutes/; s/([[:digit:]]+):0?([[:digit:]]+)/\1 hours \2 minutes/' | xargs)
# getting current shell name
SHELL=$(echo $SHELL | tr "/" " " | awk '{ print $NF }')
# getting DE and WM
# trying XDG_CURRENT_DESKTOP, if it doesn't exists, use DESKTOP_SESSION
# DESKTOP_SESSION is a full path so removing garbage
de=$(echo ${XDG_CURRENT_DESKTOP:-$DESKTOP_SESSION} | tr "/" " " | awk '{ print tolower($NF) }')
if [[ $de ]] && grep "none" <<< $de >/dev/null 2>&1 || [[ -z $de ]];
then
  if [[ $WAYLAND_DISPLAY ]];
  then
    wm=$(ps -A | grep -m 1 -F -o -e "cage"       -e "cagebreak"     -e "cardboard" \
                                 -e "dwl"        -e "enlightenment" -e "grefsen"   \
                                 -e "hikari"     -e "kwin"          -e "labwc"     \
                                 -e "liri-shell" -e "mutter"        -e "river"     \
                                 -e "sway"       -e "velox"         -e "wayfire"   \
                                 -e "waymonad"   -e "weston"        -e "wio")
  else
    # firstly getting root window id (WM)
    wm_id=$(xprop -root -notype _NET_SUPPORTING_WM_CHECK 2>/dev/null)
    # getting WM name, ignoring unimportant stuff
    wm=$(xprop -id ${wm_id##* } -notype -f _NET_WM_NAME 8t 2>/dev/null | xargs | awk '{ print tolower($3) }')
  fi
  DESKTOP="$wm"
else
  DESKTOP="$de"
fi

###########################################
# defining distro logo and packages count #
###########################################
# note for nixos: display only current user installed
# packages with no dependencies
case $OS in
alpine*)
  motif="\x1B[34m$l" # blue
  a="\x1B[34m$l"     # blue
  LOGO[0]="     $a//AAAAAAAAAAA\\\\\\\\$r   "
  LOGO[1]="    $a//$r             $a\\\\\\\\$r  "
  LOGO[2]="   $a//$r    $l<^>$r        $a\\\\\\\\$r "
  LOGO[3]="  $a//$r   $l,</$r $l\>,,$l<^>,$r  $a\\\\\\\\$r"
  LOGO[4]="  $a\\\\\\\\$r  $l</$r     $l\>$r   $l\>$r $a//$r"
  LOGO[5]="   $a\\\\\\\\$r$l</$r $l/J$r    $l\>$r   $l\\\\$r$a//$r "
  LOGO[6]="    $a\\\\\\\\$r             $a//$r  "
  LOGO[7]="     $a\\\\\\\\AAAAAAAAAAA//$r   "
  PACKAGES=$(apk info | wc -l)
  ;;
android*)
  motif="\x1B[92m$l" # bright green
  a="\x1B[32m$l"     # green
  LOGO[0]="     $a\..../$r   "
  LOGO[1]="     ${a}d${r}o${a}HH${r}o${a}b$r   "
  LOGO[2]="    $a''''''''$r  "
  LOGO[3]="  $a.$r ${a}GHHHHHHB$r $a.$r"
  LOGO[4]="  ${a}H$r ${a}H######H$r ${a}H$r"
  LOGO[5]="  ${a}U$r ${a}H######H$r ${a}U$r"
  LOGO[6]="    ${a}GHHHHHHB$r  "
  LOGO[7]="      ${a}U$r  ${a}U$r    "
  PACKAGES=$(dpkg -l | grep -c "^ii")
  ;;
astra*)
  motif="\x1B[94m$l" # bright blue
  a="\x1B[34m$l"     # blue
  LOGO[0]="          $a.$r        "
  LOGO[1]="        $a.'$r.$a'.$r      "
  LOGO[2]="  $a.....<$r.$a:::$r.$a>.....$r"
  LOGO[3]="   $a'<$r,'$a:::::::$r',$a>'$r "
  LOGO[4]="      $a<$r,$a':::'$r,$a>$r    "
  LOGO[5]="     $a<$r,$a'$r,$a>^<$r,$a'$r,$a>$r   "
  LOGO[6]="    $a<,>       <,>$r  "
  LOGO[7]="   $a\`             \`$r "
  PACKAGES=$(dpkg -l | grep -c "^ii")
  ;;
arc*)
  motif="\x1B[94m$l" # bright blue
  a="\x1B[34m$l"     # blue
  b="\x1B[36m"       # cyan
  LOGO[0]="         $a.$r       "
  LOGO[1]="        $a/^\\\\$r      "
  LOGO[2]="       $a/, ,\\\\$r     "
  LOGO[3]="      $a/, $b${l}v$r$a ,\\\\$r    "
  LOGO[4]="     $a/, $b$l($r $b$l)$r$a ,\\\\$r   "
  LOGO[5]="    $a/,$r $a>   $a<$r $a,\\\\$r  "
  LOGO[6]="   $a/.>$r       $a<.\\\\$r "
  LOGO[7]="  $a/>$r           $a<\\\\$r"
  PACKAGES=$(pacman -Qq | wc -l)
  ;;
cent*)
  motif="\x1B[93m$l" # bright yellow
  a="\x1B[32m"       # green
  b="\x1B[35m"       # magenta
  c="\x1B[33m"       # yellow
  d="\x1B[34m"       # blue
  LOGO[0]="        $c$l/-\\\\$r      "
  LOGO[1]="    ${a}F44N$r $c$l#$r ${b}F11N$r  "
  LOGO[2]="    ${a}L44X$r $c$l#$r ${b}L11X$r  "
  LOGO[3]="  $b$l/_____$r $r~ $r$d${l}_____\\\\$r"
  LOGO[4]="  $b$l\\\\\"\"\"\"\"$r $r~ $r$d${l}\"\"\"\"\"/$r"
  LOGO[5]="    ${d}F33N$r $a$l#$r ${c}F22N$r  "
  LOGO[6]="    ${d}L33X$r $a$l#$r ${c}L22X$r  "
  LOGO[7]="        $a$l\-/$r      "
  PACKAGES=$(rpm -qa | wc -l)
  ;;
debian*)
  motif="\x1B[95m$l" # bright magenta
  a="\x1B[95m$l"     # bright magenta
  LOGO[0]="      $a,6tt6,$r  "
  LOGO[1]="    $a,6$r      ${a}6$r "
  LOGO[2]="   ${a}6$r    $a,6.$r  ${a}6$r"
  LOGO[3]="  $a'6$r   ${a}6$r    ${a}6'$r"
  LOGO[4]="    ${a}6$r   $a'6''$r  "
  LOGO[5]="    $a'6$r        "
  LOGO[6]="      $a'6$r      "
  LOGO[7]="        $a'6.$r   "
  PACKAGES=$(dpkg -l | grep -c "^ii")
  ;;
elementary*)
  motif="\x1B[96m$l" # bright cyan
  a="\x1B[94m$l"     # bright blue
  LOGO[0]="        $a.,*,.$r      "
  LOGO[1]="     $a.'$r eeeee$r $a'.$r   "
  LOGO[2]="   $a.'$r e$r       e$r $a'.$r "
  LOGO[3]="  ${a}4${r} ,e_________e$r  ${a}L$r"
  LOGO[4]="  ${a}V$r  e\"\"\"\"\"\"\"\"\"\`$r  ${a}7$r"
  LOGO[5]="   $a\`,$r e$r       ,$r $a,\`$r "
  LOGO[6]="     $a\`, ${r}eeeee$r $a,\`$r   "
  LOGO[7]="        $a\`'*'\`$r      "
  PACKAGES=$(dpkg -l | grep -c "^ii")
  ;;
endeavour*)
  motif="\x1B[94m$l" # bright blue
  a="\x1B[93m$l"     # bright yellow
  b="\x1B[95m"       # bright magenta
  LOGO[0]="            $a,<\`$r$b^<\\\\$r     "
  LOGO[1]="          $a,<@$r$b,<$r${a}E\\\\$r$b%%\\\\.$r   "
  LOGO[2]="        $a,<@$r$b,<$r${a}ENDE\\\\$r$b%%\\\\\\\\$r  "
  LOGO[3]="      $a,<@$r$b,<$r${a}ENDEAVO\\\\$r$b%%\\\\\\\\$r "
  LOGO[4]="    $a,<@$r$b,<$r${a}ENDEAVOUR:D$r$b%%\\\\\`$r"
  LOGO[5]="   $a.__$r$b<$r${a}____#####_,P$r$b%%%%%%D$r"
  LOGO[6]="    $b<EFGJKX\`\`\`\`\`%%H%%_,P$r "
  LOGO[7]="  $b<-------------\`\`\`$r    "
  PACKAGES=$(pacman -Qq | wc -l)
  ;;
fedora*)
  motif="\x1B[34m$l" # blue
  a="\x1B[34m$l"     # blue
  LOGO[0]="        $a.,*,.$r      "
  LOGO[1]="     $a.'$r   $l,fff$r$a'.$r   "
  LOGO[2]="   $a.'$r     ${l}H$r     $a'.$r "
  LOGO[3]="  ${a}4$r   $l....H....$r   ${a}L$r"
  LOGO[4]="  ${a}h$r   $l\`\`\`\`H\`\`\`\`$r   ${a}7$r"
  LOGO[5]="  ${a}h$r       ${l}H$r     $a,\`$r "
  LOGO[6]="  ${a}c$r    ${l}fff'$r   $a,\`$r   "
  LOGO[7]="   $a\`zxjklfo'\`$r      "
  PACKAGES=$(rpm -qa | wc -l)
  ;;
manjaro*)
  motif="\x1B[32m$l" # green
  a="\x1B[32m$l"     # green
  LOGO[0]="  $a[][][][][][][$r $a][][][$r"
  LOGO[1]="  $a[][][][][][][$r $a][][][$r"
  LOGO[2]="  $a[][][]\"\"\"\"\"\"\"$r $a[][][]$r"
  LOGO[3]="  $a[][][]$r $a[][][]$r $a[][][]$r"
  LOGO[4]="  $a[][][]$r $a[][][]$r $a[][][]$r"
  LOGO[5]="  $a[][][]$r $a[][][]$r $a[][][]$r"
  LOGO[6]="  $a[][][]$r $a[][][]$r $a[][][]$r"
  LOGO[7]="  $a[][][]$r $a[][][]$r $a[][][]$r"
  PACKAGES=$(pacman -Qq | wc -l)
  ;;
*mint*)
  motif="\x1B[92m$l" # bright green
  a="\x1B[32m"       # green
  LOGO[0]="  ${a}MM$r   $a.*^*..*^*.$r "
  LOGO[1]="  $a\$\$$r  $a\$\$'$r $a'\$\$'$r $a'\$\$$r"
  LOGO[2]="  $a\$\$$r  $a\$\$$r   $a\$\$$r   $a\$\$$r"
  LOGO[3]="  $a\$\$$r  $a\$\$$r   $a\$\$$r   $a\$\$$r"
  LOGO[4]="  $a\$\$$r  $a\$\$$r   $a\$\$$r   $a\$\$$r"
  LOGO[5]="  $a\$\$.$r $a\`\`$r   $a\`\`$r  $a.\$\$$r"
  LOGO[6]="  $a'Q\$\$\$\$\$\$\$\$\$\$\$\$Q'$r"
  LOGO[7]="    $a\`\`\`\`\`\`\`\`\`\`\`\`$r  "
  PACKAGES=$(dpkg -l | grep -c "^ii")
  ;;
nixos*)
  motif="\x1B[94m$l" # bright blue
  a="\x1B[34m$l"     # blue
  b="\x1B[96m"       # bright cyan
  LOGO[0]="       $a\\\\\\\\$r    $b\\\\\\\\  //$r    "
  LOGO[1]="        $a\\\\\\\\$r    $b\\\\\\\\//$r     "
  LOGO[2]="    $a::::://====$r$b\\\\\\\\$r  $a//$r  "
  LOGO[3]="       $b///$r      $b\\\\\\\\$r$a//$r   "
  LOGO[4]="  $b\"\"\"\"//$r$a\\\\\\\\$r      $a///\"\"\"\"$r"
  LOGO[5]="     $b//$r  $a\\\\\\\\$r$b====//:::::$r "
  LOGO[6]="        $a//\\\\\\\\$r    $b\\\\\\\\$r     "
  LOGO[7]="       $a//  \\\\\\\\$r    $b\\\\\\\\$r    "
  PACKAGES=$(nix-store -q --requisites ~/.nix-profile | wc -l)
  ;;
opensuse*)
  motif="\x1B[92m$l" # bright green
  a="\x1B[32m$l"     # green
  b="\x1B[36m"       # cyan
  LOGO[0]="        $a.,*,.$r      "
  LOGO[1]="     $a.'$r  ${a}___$r  $a'.$r   "
  LOGO[2]="   $a.'--<'($r${b}o$r$a)\`,$r  $a'.$r "
  LOGO[3]="  ${a}4$r     $b'_____$r$a\`$r   ${a}L$r"
  LOGO[4]="  ${a}V$r       ${a}___'$r    ${a}7$r"
  LOGO[5]="   $a\`,---->$r      $a,\`$r "
  LOGO[6]="     $a\`,$r       $a,\`$r   "
  LOGO[7]="        $a\`'*'\`$r      "
  PACKAGES=$(zypper se --installed-only | wc -l)
  ;;
qubes*)
  motif="\x1B[94m$l" # bright blue
  a="\x1B[34m$l"     # blue
  LOGO[0]="       $a.<>.$r     "
  LOGO[1]="    $a.<^>''<^>.$r  "
  LOGO[2]="  $a<^><$r      $a><^>$r"
  LOGO[3]="  $a[:]$r        $a[:]$r"
  LOGO[4]="  $a[:]$r        $a[:]$r"
  LOGO[5]="  $a<:><$r      $a><:>$r"
  LOGO[6]="     $a<.>..<.>>$r  "
  LOGO[7]="       $a\`<>\`$r  $a</>$r"
  PACKAGES=$(rpm -qa | wc -l)
  ;;
ubuntu*)
  motif="\x1B[93m$l" # bright yellow
  a="\x1B[93m$l"     # bright yellow
  b="\x1B[91m$l"     # bright red
  LOGO[0]="         $a.,*,.$r  $b/**\\\\$r"
  LOGO[1]="        $a\`.\`=\`.\`$r $b\\\\**/$r"
  LOGO[2]="    $a.'.$r        $a'. .$r "
  LOGO[3]="$b/**\\\\$r $a'$r            $a'\`$r"
  LOGO[4]="$b\\\\**/$r $a.$r            $a.,$r"
  LOGO[5]="    $a\`,\`$r        $a,\` \`$r "
  LOGO[6]="        $a,\`,=,\`,$r $b/**\\\\$r"
  LOGO[7]="         $a\`'*'\`$r  $b\\\\**/$r"
  PACKAGES=$(dpkg -l | grep -c "^ii")
  ;;
zorin*)
  motif="\x1B[94m$l" # bright blue
  a="\x1B[94m"       # bright blue
  LOGO[0]="     $a//ZZZZZZZZZZZ\\\\\\\\$r   "
  LOGO[1]="    $l//\`\`\`\`\`\`\`\`\`\`\`\`\`\\\\\\\\$r  "
  LOGO[2]="   $l//......$r$l.     ...\\\\\\\\$r "
  LOGO[3]="  $a//ZZZZZZZ$r$l>    <$r${a}ZZZZ\\\\\\\\$r"
  LOGO[4]="  $a\\\\\\\\ZZZZ$r$l>    <$r${a}ZZZZZZZ//$r"
  LOGO[5]="   $l\\\\\\\\\`\`$r$l\`     \`\`\`\`\`\`\`//$r "
  LOGO[6]="    $l\\\\\\\\.............//$r  "
  LOGO[7]="     $a\\\\\\\\ZZZZZZZZZZZ//$r   "
  PACKAGES=$(dpkg -l | grep -c "^ii")
  ;;
*)
  motif="\x1B[93m$l" # bright yellow
  a="\x1B[90m"       # bright black
  b="\x1B[33m$l"     # yellow
  LOGO[0]="        ${a}XXXX$r      "
  LOGO[1]="       ${a}X$r${l}^$r${a}XX$r${l}^$r${a}X$r     "
  LOGO[2]="       ${a}X$r${b}<XX>$r${a}X$r     "
  LOGO[3]="     ${a}XX${r}X${a}XXXX${r}X${a}XX$r   "
  LOGO[4]="    ${a}XX${r}XXXXXXXX${a}XX$r  "
  LOGO[5]="   ${a}XX${r}XXXXXXXXXX${a}XX$r "
  LOGO[6]="  ${b}I$r${a}XXX${r}XXXXXXXX${a}XXX$r${b}I$r"
  LOGO[7]="  ${b}IL>$r${a}XX${r}XXXXXX$r${a}XX$r${b}<JI$r"
  ;;
esac

###########################################
# adding only existing layers to info     #
###########################################
                         INFO+=("$motif$(whoami)$r @ $motif$(hostname)$r")
[[ $OS ]]             && INFO+=("${motif}OS:$r        $OS")
[[ $KERNEL ]]         && INFO+=("${motif}KERNEL:$r    $KERNEL")
[[ $ARCH ]]           && INFO+=("${motif}ARCH:$r      $ARCH")
[[ $UPTIME ]]         && INFO+=("${motif}UPTIME:$r    $UPTIME")
[[ $PACKAGES ]]       &&
[[ 0 -ne $PACKAGES ]] && INFO+=("${motif}PACKAGES:$r  $PACKAGES")
[[ $SHELL ]]          && INFO+=("${motif}SHELL:$r     $SHELL")
[[ $DESKTOP ]]        && INFO+=("${motif}DESKTOP:$r   $DESKTOP")

###########################################
# yielding everything                     #
###########################################
printf "${LOGO[0]}  \x1B[37mW\x1B[97mE$r | ${INFO[0]}\n" # user@hostname
printf "${LOGO[1]}  \x1B[31mR\x1B[91mD$r | ${INFO[1]}\n" # OS
printf "${LOGO[2]}  \x1B[32mG\x1B[92mN$r | ${INFO[2]}\n" # kernel
printf "${LOGO[3]}  \x1B[33mY\x1B[93mW$r | ${INFO[3]}\n" # arch
printf "${LOGO[4]}  \x1B[34mB\x1B[94mE$r | ${INFO[4]}\n" # uptime
printf "${LOGO[5]}  \x1B[35mM\x1B[95mA$r | ${INFO[5]}\n" # packages
printf "${LOGO[6]}  \x1B[36mC\x1B[96mN$r | ${INFO[6]}\n" # shell
printf "${LOGO[7]}  \x1B[30mB\x1B[90mK$r | ${INFO[7]}\n" # desktop
