#!/bin/bash

trap "pkill -9 -P $$; echo -e ""; exit 0" INT

template_path=/tmp/barstatus

metrics=()

add_to_bar() {
  fn=$1
  interval=$2
  name=${3:-$1}

  printf "barstatus $name" > /proc/$$/comm
  metrics+=("$name")

  while true; do
    value=$($fn)
    echo $value > $template_path.$name

    sleep $interval
  done &
}

# define metrics functions
dte() { echo "🕒️" $(date +"%A, %B %d %H:%M:%S"); }
mem() { echo "📝" $(free -h | awk '/Mem/ {printf "%s/%s\n", $3, $2}'); }
lyt() { echo "🌍" $(xkb-switch); }
cpu() {
  read cpu a b c previdle rest < /proc/stat
  prevtotal=$((a+b+c+previdle))
  sleep 0.5
  read cpu a b c idle rest < /proc/stat
  total=$((a+b+c+idle))

  echo "💻️" "$((100 * (($total - $prevtotal) - ($idle - $previdle))/($total - $prevtotal) ))% cpu"
}
net() {
  numfmt() {
    local i=$(printf "%d" ${1:-0}) d="" s=0 l=3
    S=("B" "KiB" "MiB" "GiB" "TiB" "PiB" "EiB" "YiB" "ZiB")
    while ((i > 1024 && s < ${#S[@]}-1)); do
      printf -v d "%02d" $((i % 1024 * 100 / 1024))
      i=$((i / 1024))
      s=$((s + 1))
    done
    d=$(head -c $(($l - ${#i})) <<< $d)
    if (( ${#d} > 0 )); then
      x="$i.$d"
    else
      x="$i"
    fi
    echo "$x${S[$s]}"
  }
  iface=$(ip addr | awk '/state UP/ {print $2}' | sed 's/.$//')
  d_path="/sys/class/net/$iface/statistics/rx_bytes"
  u_path="/sys/class/net/$iface/statistics/tx_bytes"
  delta=2

  read pd pu <<< "$(cat $d_path) $(cat $u_path)"
  sleep $delta
  read nd nu <<< "$(cat $d_path) $(cat $u_path)"

  d=$( numfmt $(( ($nd - $pd) / $delta )) )
  u=$( numfmt $(( ($nu - $pu) / $delta )) )

  echo "🔽$d/s 🔼$u/s"
}
blp() {
  percentage=$(bluetoothctl info | grep "Battery Percentage" | sed 's/.*(\([^)]*\)).*/\1/g')
  if [[ -n $percentage ]]; then
    echo "🎧⚡️" $percentage%
  fi
}
upd() {
  updates=$(checkupdates 2> /dev/null)
  emoji="🔁"

  if [[ "$updates" =~ "linux" ]]; then
    emoji+="!"
  fi

  if (( $(echo "$updates" | wc -w) > 0)); then
    echo $emoji $(echo "$updates" | wc -l)
  fi
}

# add metrics to the bar
add_to_bar cpu 0.00  # sleeps while evaluating
add_to_bar net 0.00  # sleeps while evaluating
add_to_bar blp 1.00
add_to_bar lyt 0.09
add_to_bar upd 60.0
add_to_bar mem 1.00
add_to_bar dte 0.10

# name process
printf "barstatus" > /proc/$$/comm

# wait for first part of data
sleep 0.01

while true; do
  line=""

  for metric in "${metrics[@]}"; do
    value=$(cat $template_path.$metric 2> /dev/null)
    if [[ -n $value ]]; then
      line+=$value
      line+=" | "
    fi
  done

  if (( $(echo $line | wc -c) >= 3 )); then
    line=${line:0:-3}
  fi

  xsetroot -name "$line"

  sleep 0.19

done

